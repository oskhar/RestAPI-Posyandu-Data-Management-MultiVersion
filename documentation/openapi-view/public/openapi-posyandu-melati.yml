openapi: "3.0.2"
info:
  title: API Posyandu Melati
  version: "2.0"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
servers:
  - url: http://localhost:8000/api
tags:
  - name: Admin Authentication
    description: For admin authentication
  - name: Member Authentication
    description: For Member authentication
  - name: Member Data
    description: For managing member data
  - name: Educational Data
    description: For managing educational data
  - name: Event Report Data
    description: For managing event report data
  - name: Image Data
    description: For managing image data
  - name: Posyandu Data
    description: For managing posyandu data
  - name: Admin Data
    description: For managing admin data
  - name: Format 1 Data
    description: For managing Format 1 data
  - name: Format 2 A Data
    description: For managing Format 2 A data
  - name: Statistics Data
    description: For monitoring posyandu statistics
  - name: Kader Gendong Service
    description: Service for managing task assignments between kader
  - name: Resleting Service
    description: Service for youth care for stunting
  - name: Sales Service
    description: Special sales service for posyandu
  - name: Excel Import
    description: Feature for importing Excel data into the database
paths:
  /admin/login:
    post:
      tags:
        - Admin Authentication
      summary: for GUEST
      requestBody:
        content:
          application/json:
            example:
              email: "required|email"
              password: "required|string"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                status: true
                message: "Login successful."
                data:
                  admin:
                    full_name: "string"
                    email: "email"
                    job_title: "string"
                    profile_picture: "link"
                    gender: "L|P"
                    address: "string"
                    birth_date: "date"
                    phone_number: "string"
                  token:
                    access_token: "string"
                    expires_in: "integer|minute"
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /admin/refresh:
    post:
      tags:
        - Admin Authentication
      summary: need ADMIN Authentication
      responses:
        201:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Refresh access token successful."
                data:
                  token:
                    access_token: "string"
                    expires_in: "integer|minute"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZE
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /admin/me:
    post:
      tags:
        - Admin Authentication
      summary: need ADMIN Authentication
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Get self admin data successful."
                data:
                  admin:
                    full_name: "string"
                    email: "email"
                    job_title: "string"
                    profile_picture: "link"
                    gender: "L|P"
                    address: "string"
                    birth_date: "date"
                    phone_number: "string"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZE
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /admin/logout:
    post:
      tags:
        - Admin Authentication
      summary: need ADMIN Authentication
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Logout successful."
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /admin/reset-password:
    post:
      tags:
        - Admin Authentication
      summary: need ADMIN Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
                confirm_password:
                  type: string
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Success! Your request has safely landed back to Earth."
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/register:
    post:
      tags:
        - Member Authentication
      summary: for GUEST
      requestBody:
        content:
          application/json:
            example:
              full_name: "string|required"
              email: "email|required|unique"
              birth_date: "date|required"
              phone_number: "string|required"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Registration successful."
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/login:
    post:
      tags:
        - Member Authentication
      summary: for GUEST
      requestBody:
        content:
          application/json:
            example:
              email: "required|email"
              password: "required|string"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                status: true
                message: "Login successful."
                data:
                  member:
                    full_name: "string"
                    email: "email"
                    profile_picture: "link"
                    gender: "L|P"
                    birth_date: "date"
                    phone_number: "string"
                    poin: "integer"
                  token:
                    access_token: "string"
                    expires_in: "integer|minute"
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/refresh:
    post:
      tags:
        - Member Authentication
      summary: need MEMBER Authentication
      responses:
        201:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Refresh access token successful."
                data:
                  token:
                    access_token: "string"
                    expires_in: "integer|minute"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZE
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/me:
    post:
      tags:
        - Member Authentication
      summary: need MEMBER Authentication
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Get self MEMBER data successful."
                data:
                  member:
                    full_name: "string"
                    email: "email"
                    profile_picture: "link"
                    gender: "L|P"
                    birth_date: "date"
                    phone_number: "string"
                    poin: "integer"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZE
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/logout:
    post:
      tags:
        - Member Authentication
      summary: need MEMBER Authentication
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Logout successful."
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/reset-password:
    post:
      tags:
        - Member Authentication
      summary: MELAKUKAN perubahan password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
                confirm_password:
                  type: string
      responses:
        200:
          description: CREATED
          content:
            application/json:
              example:
                status: true
                message: "Success! Your request has safely landed back to Earth."
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member:
    get:
      tags:
        - Member Data
      summary: need ADMIN Authentication
      parameters:
        - name: length
          in: query
          required: true
          schema:
            type: integer
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - terbaru
              - terlama
              - a-z
              - z-a
            default: terbaru
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                status: true
                message: "Success! Your request has safely landed back to Earth."
                data:
                  member:
                    full_name: "string"
                    profile_picture: "link"
                    gender: "L|P"
                    birth_date: "date"
                    phone_number: "string"
                  pagination:
                    total: "integer"
                    per_page: "integer"
                    current_page: "integer"
                    total_pages: "integer"
                    links:
                      next: "string"
                      prev: "string"
                      first: "string"
                      last: "string"
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
    put:
      tags:
        - Member Data
      summary: need MEMBER Authentication
      requestBody:
        content:
          application/json:
            example:
              full_name: "string|required"
              email: "email|unique|required"
              gender: "L|P|required"
              birth_date: "date|required"
              profile_picture: "link"
              phone_number: "string"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                status: true
                message: "Success! Your request has safely landed back to Earth."
                meta:
                  request_id: string
                  response_size: string
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              example:
                status: false
                message: "Your credentials don't pass the cosmic gatekeeper!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                status: false
                message: "Your request veered off course and couldn't escape Earth's gravity!"
                errors: "array<string>"
                meta:
                  request_id: string
                  response_size: string
  /member/{id}:
    delete:
      tags:
        - Data member
      summary: MENGHAPUS data member
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Akun berhasil dihapus!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /edukasi:
    get:
      tags:
        - Data edukasi
      summary: MENDAPATKAN data edukasi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_edukasi:
                  type: integer
                search:
                  type: string
                start:
                  type: integer
                length:
                  type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  edukasi:
                    type: array
                    items:
                      type: object
                      properties:
                        id_edukasi:
                          type: string
                        email:
                          type: string
                        nama_lengkap:
                          type: string
                        judul:
                          type: string
                        materi:
                          type: string
                        overview:
                          type: string
                        gambar:
                          type: string
                        tanggal:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data edukasi
      summary: MENAMBAHKAN data edukasi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
                judul:
                  type: string
                materi:
                  type: string
                gambar:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    put:
      tags:
        - Data edukasi
      summary: MENGUBAH data edukasi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_edukasi:
                  type: integer
                judul:
                  type: string
                materi:
                  type: string
                gambar:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    delete:
      tags:
        - Data edukasi
      summary: MENGHAPUS data edukasi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_edukasi:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /berita:
    get:
      tags:
        - Data berita acara
      summary: MENDAPATKAN data berita
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_berita:
                  type: integer
                search:
                  type: string
                start:
                  type: integer
                length:
                  type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  berita:
                    type: array
                    items:
                      type: object
                      properties:
                        id_berita:
                          type: integer
                        email:
                          type: string
                        nama_lengkap:
                          type: string
                        judul:
                          type: string
                        deskripsi:
                          type: string
                        overview:
                          type: string
                        gambar:
                          type: string
                        tanggal_pelaksanaan:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data berita acara
      summary: MENAMBAHKAN data berita
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
                judul:
                  type: string
                deskripsi:
                  type: string
                gambar:
                  type: string
                tanggal_pelaksanaan:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    put:
      tags:
        - Data berita acara
      summary: MENGUBAH data berita
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_berita:
                  type: integer
                judul:
                  type: string
                deskripsi:
                  type: string
                gambar:
                  type: string
                tanggal_pelaksanaan:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    delete:
      tags:
        - Data berita acara
      summary: MENGHAPUS data berita
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_berita:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /gambar:
    get:
      tags:
        - Data gambar
      summary: MENDAPATKAN data gambar

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_gambar:
                  type: integer
                start:
                  type: integer
                length:
                  type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  gambar:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                        nama_lengkap:
                          type: string
                        gambar:
                          type: string
                        tanggal:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data gambar
      summary: MENAMBAHKAN data gambar
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
                gambar:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    delete:
      tags:
        - Data gambar
      summary: MENGHAPUS data gambar
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_gambar:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /posyandu:
    get:
      tags:
        - Data posyandu
      summary: MENDAPATKAN data posyandu

      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  nama_posyandu:
                    type: string
                  kota:
                    type: string
                  kecamatan:
                    type: string
                  kelurahan:
                    type: string
                  rt_rw:
                    type: string
                  penyampaian_ketua:
                    type: string
                  gambar_gedung:
                    type: string
                  visi:
                    type: string
                  misi:
                    type: string
                  foto_profile_ketua:
                    type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    put:
      tags:
        - Data posyandu
      summary: MENGUBAH data posyandu
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_posyandu:
                  type: string
                kota:
                  type: string
                kecamatan:
                  type: string
                kelurahan:
                  type: string
                rt_rw:
                  type: string
                penyampaian_ketua:
                  type: string
                gambar_gedung:
                  type: string
                visi:
                  type: string
                misi:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /admin:
    get:
      tags:
        - Data admin
      summary: MENDAPATKAN data admin

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
                search:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  admin:
                    type: array
                    items:
                      type: object
                      properties:
                        id_admin:
                          type: integer
                        id_jabatan:
                          type: integer
                        email:
                          type: string
                        nama_lengkap:
                          type: string
                        foto_profile:
                          type: string
                        jenis_kelamin:
                          type: string
                        alamat:
                          type: string
                        tanggal_lahir:
                          type: string
                        no_telp:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data admin
      summary: MENAMBAHKAN data admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_jabatan:
                  type: integer
                email:
                  type: string
                nama_lengkap:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    put:
      tags:
        - Data admin
      summary: MENGUBAH data admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
                id_jabatan:
                  type: integer
                email:
                  type: string
                password:
                  type: object
                  properties:
                    lama:
                      type: string
                    baru_a:
                      type: string
                    baru_b:
                      type: string
                nama_lengkap:
                  type: string
                foto_profile:
                  type: string
                jenis_kelamin:
                  type: boolean
                alamat:
                  type: string
                tanggal_lahir:
                  type: string
                no_telp:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    delete:
      tags:
        - Data admin
      summary: MENGHAPUS data admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_admin:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /format-a:
    get:
      tags:
        - Data Format 1
      summary: MENDAPATKAN data format-a
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_format_a:
                  type: integer
                search:
                  type: string
                start:
                  type: integer
                length:
                  type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  nama_posyandu:
                    type: string
                  kota:
                    type: string
                  judul_format:
                    type: string
                  jumlah_lahir:
                    type: integer
                  jumlah_meninggal:
                    type: integer
                  jumlah_bayi_meninggal:
                    type: integer
                  jumlah_ibu_meninggal:
                    type: integer
                  jumlah_data:
                    type: integer
                  format_a:
                    type: array
                    items:
                      type: object
                      properties:
                        id_format_a:
                          type: integer
                        nama_ayah:
                          type: string
                        nama_ibu:
                          type: string
                        nama_bayi:
                          type: string
                        jenis_kelamin:
                          type: string
                        tanggal_lahir:
                          type: string
                        tanggal_meninggal_bayi:
                          type: string
                        tanggal_meninggal_ibu:
                          type: string
                        keterangan:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data Format 1
      summary: MENAMBAHKAN data format-a
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_ayah:
                  type: string
                nama_ibu:
                  type: string
                nama_bayi:
                  type: string
                jenis_kelamin:
                  type: string
                tanggal_lahir:
                  type: string
                tanggal_meninggal_bayi:
                  type: string
                tanggal_meninggal_ibu:
                  type: string
                keterangan:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    put:
      tags:
        - Data Format 1
      summary: MENGUBAH data format-a
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_format_a:
                  type: integer
                nama_ayah:
                  type: string
                nama_ibu:
                  type: string
                nama_bayi:
                  type: string
                jenis_kelamin:
                  type: string
                tanggal_lahir:
                  type: string
                tanggal_meninggal_bayi:
                  type: string
                tanggal_meninggal_ibu:
                  type: string
                keterangan:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    delete:
      tags:
        - Data Format 1
      summary: MENGHAPUS data format-a
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_format_a:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /format-ba:
    get:
      tags:
        - Data Format 2 A
      summary: MENDAPATKAN data format-ba
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_format_a:
                  type: integer
                search:
                  type: string
                start:
                  type: integer
                length:
                  type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  format_ba:
                    type: array
                    items:
                      type: object
                      properties:
                        id_bayi:
                          type: integer
                        nama_bayi:
                          type: string
                        jenis_kelamin:
                          type: string
                        berat_badan:
                          type: number
                        ntob:
                          type: string
                        asi_ekslusif:
                          type: string
                        tanggal_lahir:
                          type: string
                          format: date
                        umur:
                          type: integer
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data Format 2 A
      summary: MENAMBAHKAN data format-ba
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_bayi:
                  type: integer
                judul:
                  type: string
                berat_badan:
                  type: integer
                ntob:
                  type: string
                asi_ekslusif:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /format-b/unique:
    get:
      tags:
        - Data Format 2 A
      summary: MENDAPATKAN data format-b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                start:
                  type: integer
                length:
                  type: integer
                tahun:
                  type: integer
                tab:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jumlah_data:
                    type: integer
                  format_ba:
                    type: array
                    items:
                      type: object
                      properties:
                        id_bayi:
                          type: integer
                        nama_bayi:
                          type: string
                        jenis_kelamin:
                          type: string
                        berat_badan:
                          type: number
                        ntob:
                          type: string
                        asi_ekslusif:
                          type: string
                        tanggal_lahir:
                          type: string
                          format: date
                        umur:
                          type: integer
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
  # ==================================================================

  /statistik/dashboard:
    get:
      tags:
        - Data statistik
      summary: MENDAPATKAN data statistik

      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  nama_statistik:
                    type: string
                  kota:
                    type: string
                  kecamatan:
                    type: string
                  kelurahan:
                    type: string
                  rt_rw:
                    type: string
                  penyampaian_ketua:
                    type: string
                  gambar_gedung:
                    type: string
                  visi:
                    type: string
                  misi:
                    type: string
                  foto_profile_ketua:
                    type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"

  # ==================================================================

  /kader-gendong:
    get:
      tags:
        - Layanan Kader Gendong
      summary: MELIHAT riwayat pencetakan surat
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    penanda_tangan: "string"
                    pembuat_surat: "string"
                    isi_surat: "text"
                    tanggal_surat: "date"
                    created_at: "datetime"
                    file: "Blob base64"
                first_page_url: "http://localhost:8000/api/kader-gendong?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/kader-gendong?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/kader-gendong?page=3"
                path: "http://localhost:8000/api/kader-gendong"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/kader-gendong?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Layanan Kader Gendong
      summary: MENAMBAHKAN data surat kader
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                penanda_tangan: "string"
                jabatan_penanda_tangan: "string"
                tanggal_surat: "date"
                nomor: "string"
                kalimat_pembuka: "text"
                ditugaskan:
                  nama: "string"
                  jabatan: "string"
                  alamat: "text"
                isi_surat: "text"
                kalimat_penutup: "text"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
                  file: "Blob base64"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"

  # ==================================================================

  /kader-gendong/preview:
    post:
      tags:
        - Layanan Kader Gendong
      summary: MENAMBAHKAN data surat kader
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                penanda_tangan: "string"
                jabatan_penanda_tangan: "string"
                tanggal_surat: "date"
                nomor: "string"
                kalimat_pembuka: "text"
                ditugaskan:
                  nama: "string"
                  jabatan: "string"
                  alamat: "text"
                isi_surat: "text"
                kalimat_penutup: "text"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Data ... berhasil ditambahkan"
                  file: "Blob base64"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"

  # ==================================================================

  /kader-gendong/draf:
    get:
      tags:
        - Layanan Kader Gendong
      summary: MELIHAT list draf surat
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    penanda_tangan: "string"
                    jabatan_penanda_tangan: "string"
                    tanggal_surat: "date"
                    nomor: "string"
                    kalimat_pembuka: "text"
                    ditugaskan:
                      nama: "string"
                      jabatan: "string"
                      alamat: "text"
                    isi_surat: "text"
                    kalimat_penutup: "text"
                    created_at: "datetime"
                    file: "Blob base64"
                first_page_url: "http://localhost:8000/api/kader-gendong?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/kader-gendong?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/kader-gendong?page=3"
                path: "http://localhost:8000/api/kader-gendong"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/kader-gendong?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Layanan Kader Gendong
      summary: MENAMBAHKAN data draf surat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                penanda_tangan: "string"
                jabatan_penanda_tangan: "string"
                tanggal_surat: "date"
                nomor: "string"
                kalimat_pembuka: "text"
                ditugaskan:
                  nama: "string"
                  jabatan: "string"
                  alamat: "text"
                isi_surat: "text"
                kalimat_penutup: "text"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Berhasil dimasukan dalam draf"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /kader-gendong/draf/{id}:
    put:
      tags:
        - Layanan Kader Gendong
      summary: MENGUBAH data draf surat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                penanda_tangan: "string"
                jabatan_penanda_tangan: "string"
                tanggal_surat: "date"
                nomor: "string"
                kalimat_pembuka: "text"
                ditugaskan:
                  nama: "string"
                  jabatan: "string"
                  alamat: "text"
                isi_surat: "text"
                kalimat_penutup: "text"
      responses:
        200:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Draf berhasil diperbarui"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    delete:
      tags:
        - Layanan Kader Gendong
      summary: MENGHAPUS data dari draf surat
      responses:
        200:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Draf surat dan penugasan terkait berhasil dihapus"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /kader-gendong/draf/cetak/{id}:
    post:
      tags:
        - Layanan Kader Gendong
      summary: MEMINDAHKAN draf surat ke surat
      responses:
        200:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Draf berhasil dicetak sebagai surat"
                  file: "Blob base64"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /resleting/tantangan:
    get:
      tags:
        - Layanan Resleting
      summary: MELIHAT seluruh tantangan resleting
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    id: "integer"
                    judul: "string"
                    gambar: "link"
                    deskripsi: "text"
                    overview: "string"
                    tanggal_mulai: "date"
                    tanggal_selesai: "date"
                first_page_url: "http://localhost:8000/api/resleting/tantangan?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/resleting/tantangan?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/resleting/tantangan?page=3"
                path: "http://localhost:8000/api/resleting/tantangan"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/resleting/tantangan?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Layanan Resleting
      summary: MENAMBAHKAN tantangan resleting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                judul: "string"
                gambar: "link|nullable"
                deskripsi: "text"
                overview: "string"
                tanggal_mulai: "date"
                tanggal_selesai: "date"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Tantangan berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /resleting/tantangan/{id}:
    get:
      tags:
        - Layanan Resleting
      summary: MELIHAT seluruh tantangan resleting
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                judul: "string"
                gambar: "link"
                deskripsi: "text"
                overview: "string"
                tanggal_mulai: "date"
                tanggal_selesai: "date"
                member_submitted: "boolean|optional"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    put:
      tags:
        - Layanan Resleting
      summary: MENGUBAH data tantangan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                judul: "string"
                gambar: "link|nullable"
                deskripsi: "text"
                overview: "string"
                tanggal_mulai: "date"
                tanggal_selesai: "date"
      responses:
        200:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Tantangan berhasil diperbarui"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    delete:
      tags:
        - Layanan Resleting
      summary: MENGHAPUS tantangan resleting
      responses:
        200:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Tantangan telah dihapus!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /resleting/submission:
    get:
      tags:
        - Layanan Resleting
      summary: MELIHAT semua submission
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
              tantangan_id: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    id: "integer"
                    tantangan_id: "integer"
                    file: "Blob base64"
                    link: "string"
                    feedback: "text|nullable"
                    peringkat: "integer"
                    status: "string"
                first_page_url: "http://localhost:8000/api/resleting/submission?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/resleting/submission?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/resleting/submission?page=3"
                path: "http://localhost:8000/api/resleting/submission"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/resleting/submission?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Layanan Resleting
      summary: MENAMBAHKAN submission hasil
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                tantangan_id: "integer"
                file: "Blob base64|nullable"
                link: "string|nullable"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Sumbission berhasil dikirim!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /resleting/submission/{id}:
    put:
      tags:
        - Layanan Resleting
      summary: MENGUBAH data submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                feedback: "text|nullable"
                peringkat: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Submission berhasil dinilai!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
    delete:
      tags:
        - Layanan Resleting
      summary: MENGHAPUS data submission
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Submission berhasil ditarik kembali!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /member/tantangan:
    get:
      tags:
        - Layanan Resleting
      summary: MELIHAT seluruh tantangan resleting
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    id: "integer"
                    judul: "string"
                    gambar: "link"
                    deskripsi: "text"
                    overview: "string"
                    tanggal_mulai: "date"
                    tanggal_selesai: "date"
                first_page_url: "http://localhost:8000/api/resleting/tantangan?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/resleting/tantangan?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/resleting/tantangan?page=3"
                path: "http://localhost:8000/api/resleting/tantangan"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/resleting/tantangan?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
  /produk:
    get:
      tags:
        - Layanan Penjualan
      summary: MELIHAT semua produk
      requestBody:
        content:
          application/json:
            example:
              search: "string"
              length: "integer|required"
              page: "integer"
              tags: "string"
              sort: "string:terbaru|terlama|a-z|z-a|termahal|termurah"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                current_page: 2
                data:
                  array:
                    id: "integer"
                    nomor_telepon: "string"
                    nama: "string"
                    deskripsi: "text"
                    overview: "text"
                    tags: "array<string>"
                    harga: "integer"
                    gambar: "link"
                first_page_url: "http://localhost:8000/api/produk?page=1"
                from: 2
                last_page: 8
                last_page_url: "http://localhost:8000/api/produk?page=8"
                links: Array(10) [ {…}, {…}, {…}, … ]
                next_page_url: "http://localhost:8000/api/produk?page=3"
                path: "http://localhost:8000/api/produk"
                per_page: 1
                prev_page_url: "http://localhost:8000/api/produk?page=1"
                to: 2
                total: 8
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Layanan Penjualan
      summary: MENAMBAHKAN produk hasil
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                nomor_telepon: "string"
                nama: "string"
                deskripsi: "text"
                overview: "text"
                tags: "array<string>|nullable"
                harga: "integer"
                gambar: "Blob base64"
                sedang_dijual: "boolean|default:true"
                pin: "boolean|default:false"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Produk berhasil ditambahkan!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        422:
          description: UNPROCESSABLE ENTITY
          content:
            application/json:
              example:
                errors:
                  message: "Jumlah produk yang dipin tidak boleh lebih dari 5"
  /produk/{id}:
    get:
      tags:
        - Layanan Penjualan
      summary: MELIHAT semua tag produk yang tersedia
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                nomor_telepon: "string"
                nama: "string"
                deskripsi: "text"
                overview: "text"
                tags: "array<string>|nullable"
                harga: "integer"
                gambar: "Blob base64"
                sedang_dijual: "boolean"
                pin: "boolean"
    put:
      tags:
        - Layanan Penjualan
      summary: MENGUBAH data produk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              example:
                id: "integer"
                nomor_telepon: "string"
                nama: "string"
                deskripsi: "text"
                overview: "text"
                tags: "array<string>|nullable"
                harga: "integer"
                gambar: "Blob base64"
                sedang_dijual: "boolean"
                pin: "boolean"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Produk telah diperbarui!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        422:
          description: UNPROCESSABLE ENTITY
          content:
            application/json:
              example:
                errors:
                  message: "Jumlah produk yang dipin tidak boleh lebih dari 5"
    delete:
      tags:
        - Layanan Penjualan
      summary: MENGHAPUS data produk
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                success:
                  message: "Produk berhasil dihilangkan dari peredaran!"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /produk/pin:
    get:
      tags:
        - Layanan Penjualan
      summary: MELIHAT semua produk yang dipin
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  example:
                    id: "integer"
                    nomor_telepon: "string"
                    nama: "string"
                    deskripsi: "text"
                    overview: "text"
                    tags: "array<string>"
                    harga: "integer"
                    gambar: "link"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
  /produk/tags:
    get:
      tags:
        - Layanan Penjualan
      summary: MELIHAT semua tag produk yang tersedia
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  example: "tag string"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
  /import/format-a:
    post:
      tags:
        - Import excel
      summary: MELAKUKAN import data bayi
      requestBody:
        content:
          multipart/form-data:
            example:
              file: "file"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              example:
                success:
                  message: "Data berhasil diimport"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
  /import/format-b:
    post:
      tags:
        - Import excel
      summary: MELAKUKAN import data bayi
      requestBody:
        content:
          multipart/form-data:
            example:
              file: "file"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              example:
                success:
                  message: "Data berhasil diimport"
        400:
          description: BAD REQUEST
          content:
            application/json:
              example:
                errors:
                  message: "Data ... tidak valid"
